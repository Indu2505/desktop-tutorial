# ðŸš€ Spaceship Titanic Kaggle Challenge - Starter Notebook

# === IMPORTS ===
import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

from sklearn.model_selection import train_test_split, cross_val_score
from sklearn.preprocessing import LabelEncoder, StandardScaler
from sklearn.impute import SimpleImputer
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import classification_report, accuracy_score
from xgboost import XGBClassifier

# === MOUNT GITHUB DATA IF APPLICABLE ===
from google.colab import drive
drive.mount('/content/drive')

# === LOAD DATA ===
train = pd.read_csv('train.csv')
test = pd.read_csv('test.csv')
sample_submission = pd.read_csv('sample_submission.csv')

# === EXPLORATORY DATA ANALYSIS (EDA) ===
print(train.info())
print(train.describe())
print(train.isnull().sum())

# Visualise missing data
sns.heatmap(train.isnull(), cbar=False, cmap='viridis')
plt.title("Missing Values Heatmap")
plt.show()

# Target variable distribution
sns.countplot(data=train, x='Transported')
plt.title("Transported Distribution")
plt.show()

# === FEATURE ENGINEERING ===
# Split 'Cabin' into 3 columns
def split_cabin(df):
    df[['Deck','Num','Side']] = df['Cabin'].str.split('/', expand=True)
    return df

train = split_cabin(train)
test = split_cabin(test)

# Fill missing values
cat_cols = train.select_dtypes(include='object').columns.tolist()
num_cols = train.select_dtypes(include='number').columns.tolist()

# Imputation
imputer_cat = SimpleImputer(strategy='most_frequent')
imputer_num = SimpleImputer(strategy='mean')

train[cat_cols] = imputer_cat.fit_transform(train[cat_cols])
train[num_cols] = imputer_num.fit_transform(train[num_cols])

test[cat_cols] = imputer_cat.transform(test[cat_cols])
test[num_cols] = imputer_num.transform(test[num_cols])

# Encode categorical variables
encoder = LabelEncoder()
for col in cat_cols:
    train[col] = encoder.fit_transform(train[col])
    test[col] = encoder.transform(test[col])

# === MODEL TRAINING ===
# Drop non-numeric columns
X = train.drop(columns=['Transported', 'PassengerId', 'Name'])
y = train['Transported'].astype(int)

X_test_final = test.drop(columns=['PassengerId', 'Name'])

# Split data for local validation
X_train, X_val, y_train, y_val = train_test_split(X, y, test_size=0.2, random_state=42)

# Train model
model = XGBClassifier(use_label_encoder=False, eval_metric='logloss')
model.fit(X_train, y_train)

# Evaluate
y_pred = model.predict(X_val)
print(classification_report(y_val, y_pred))

# === SUBMISSION PREP ===
predictions = model.predict(X_test_final)
submission = pd.DataFrame({
    'PassengerId': test['PassengerId'],
    'Transported': predictions.astype(bool)
})
submission.to_csv('submission.csv', index=False)

# === KAGGLE SUBMISSION EVIDENCE (add manually) ===
# Include a screenshot in presentation slides with your team name on Kaggle leaderboard.
